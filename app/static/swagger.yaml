swagger: '2.0'
info:
  title: E-commerce API
  description: API for managing users, products, and orders in an e-commerce platform.
  version: "1.0"
host: localhost:5000
basePath: /
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json

paths:
  /register:
    post:
      summary: Register a new user
      description: Create a new user account.
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - username
              - email
              - password
            properties:
              username:
                type: string
              email:
                type: string
              password:
                type: string
      responses:
        201:
          description: User created successfully
          schema:
            type: object
            properties:
              message:
                type: string
        400:
          description: User already exists
          schema:
            type: object
            properties:
              error:
                type: string

  /login:
    post:
      summary: Login a user
      description: Authenticate a user and return an access token.
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - email
              - password
            properties:
              email:
                type: string
              password:
                type: string
      responses:
        200:
          description: Login successful
          schema:
            type: object
            properties:
              access_token:
                type: string
        401:
          description: Invalid credentials
          schema:
            type: object
            properties:
              error:
                type: string

  /products:
    get:
      summary: Get a list of products
      description: Retrieve all products in the store.
      responses:
        200:
          description: A list of products
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                name:
                  type: string
                description:
                  type: string
                price:
                  type: number
                stock:
                  type: integer
                created_at:
                  type: string
                  format: date-time
    post:
      summary: Add a new product
      description: Create a new product.
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - name
              - price
            properties:
              name:
                type: string
              description:
                type: string
              price:
                type: number
              stock:
                type: integer
      responses:
        201:
          description: Product created successfully
          schema:
            type: object
            properties:
              message:
                type: string
        400:
          description: Invalid input
          schema:
            type: object
            properties:
              error:
                type: string

  /products/{product_id}:
    get:
      summary: Get a product by ID
      description: Retrieve a single product by its ID.
      parameters:
        - name: product_id
          in: path
          required: true
          type: integer
      responses:
        200:
          description: A product object
          schema:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              description:
                type: string
              price:
                type: number
              stock:
                type: integer
              created_at:
                type: string
                format: date-time
        404:
          description: Product not found
          schema:
            type: object
            properties:
              error:
                type: string
    put:
      summary: Update a product by ID
      description: Modify a product's details.
      parameters:
        - name: product_id
          in: path
          required: true
          type: integer
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
              description:
                type: string
              price:
                type: number
              stock:
                type: integer
      responses:
        200:
          description: Product updated successfully
          schema:
            type: object
            properties:
              message:
                type: string
        404:
          description: Product not found
          schema:
            type: object
            properties:
              error:
                type: string
    delete:
      summary: Delete a product by ID
      description: Remove a product from the store.
      parameters:
        - name: product_id
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Product deleted successfully
          schema:
            type: object
            properties:
              message:
                type: string
        404:
          description: Product not found
          schema:
            type: object
            properties:
              error:
                type: string

  /orders:
    get:
      summary: Get a list of orders
      description: Retrieve all orders for the current user.
      responses:
        200:
          description: A list of orders
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                user_id:
                  type: integer
                total_price:
                  type: number
                created_at:
                  type: string
                  format: date-time
                status:
                  type: string
    post:
      summary: Create a new order
      description: Place a new order.
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - total_price
            properties:
              total_price:
                type: number
      responses:
        201:
          description: Order created successfully
          schema:
            type: object
            properties:
              message:
                type: string

  /orders/{order_id}:
    get:
      summary: Get an order by ID
      description: Retrieve a single order by its ID.
      parameters:
        - name: order_id
          in: path
          required: true
          type: integer
      responses:
        200:
          description: An order object
          schema:
            type: object
            properties:
              id:
                type: integer
              user_id:
                type: integer
              total_price:
                type: number
              created_at:
                type: string
                format: date-time
              status:
                type: string
        404:
          description: Order not found
          schema:
            type: object
            properties:
              error:
                type: string
    put:
      summary: Update an order by ID
      description: Modify the status of an order.
      parameters:
        - name: order_id
          in: path
          required: true
          type: integer
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              status:
                type: string
      responses:
        200:
          description: Order updated successfully
          schema:
            type: object
            properties:
              message:
                type: string
        404:
          description: Order not found
          schema:
            type: object
            properties:
              error:
                type: string
    delete:
      summary: Delete an order by ID
      description: Remove an order.
      parameters:
        - name: order_id
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Order deleted successfully
          schema:
            type: object
            properties:
              message:
                type: string
        404:
          description: Order not found
          schema:
            type: object
            properties:
              error:
                type: string
